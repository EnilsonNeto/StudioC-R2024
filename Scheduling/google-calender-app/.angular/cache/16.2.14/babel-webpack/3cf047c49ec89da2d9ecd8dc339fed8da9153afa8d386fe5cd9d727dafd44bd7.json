{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class BookingComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.appointmentForm = this.fb.group({\n      appointmentTime: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  // Function to handle the button click event to schedule a meeting.\n  scheduleMeeting() {\n    let appointmentTime = new Date(this.appointmentForm.value.appointmentTime);\n    // Convert the date to the desired format with a custom offset (e.g., -07:00)\n    const startTime = appointmentTime.toISOString().slice(0, 18) + '-07:00';\n    const endTime = this.getEndTime(appointmentTime);\n    const eventDetails = {\n      email: this.appointmentForm.value.email,\n      startTime: startTime,\n      endTime: endTime\n    };\n    console.info(eventDetails);\n    //this.generateICSFile()\n    createGoogleEvent(eventDetails);\n  }\n  getEndTime(appointmentTime) {\n    // Add one hour to the date\n    appointmentTime.setHours(appointmentTime.getHours() + 1);\n    const endTime = appointmentTime.toISOString().slice(0, 18) + '-07:00';\n    return endTime;\n  }\n  generateICSFile() {\n    const datetimeValue = this.appointmentForm.value.appointmentTime;\n    const date = new Date(datetimeValue);\n    const endTime = new Date(date);\n    endTime.setHours(endTime.getHours() + 1);\n    // Format dates to be in the proper format for the .ics file\n    const formattedStartDate = date.toISOString().replace(/-/g, '').replace(/:/g, '').slice(0, -5);\n    const formattedEndDate = endTime.toISOString().replace(/-/g, '').replace(/:/g, '').slice(0, -5);\n    // Event details\n    const eventName = 'Sample Event';\n    const eventDescription = 'This is a sample event';\n    const location = 'Sample Location';\n    // Create the .ics content\n    const icsContent = `BEGIN:VCALENDAR\n  VERSION:2.0\n  BEGIN:VEVENT\n  DTSTAMP:${formattedStartDate}Z\n  DTSTART:${formattedStartDate}Z\n  DTEND:${formattedEndDate}Z\n  SUMMARY:${eventName}\n  DESCRIPTION:${eventDescription}\n  LOCATION:${location}\n  END:VEVENT\n  END:VCALENDAR`;\n    // Create a Blob containing the .ics content\n    const blob = new Blob([icsContent], {\n      type: 'text/calendar;charset=utf-8'\n    });\n    // Create a download link for the Blob\n    const downloadLink = document.createElement('a');\n    downloadLink.href = URL.createObjectURL(blob);\n    downloadLink.download = 'event.ics';\n    // Trigger the download\n    downloadLink.click();\n  }\n  static #_ = this.ɵfac = function BookingComponent_Factory(t) {\n    return new (t || BookingComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookingComponent,\n    selectors: [[\"app-booking\"]],\n    decls: 15,\n    vars: 1,\n    consts: [[1, \"card\"], [\"id\", \"title\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"appointmentTime\"], [\"type\", \"datetime-local\", \"id\", \"appointmentTime\", \"formControlName\", \"appointmentTime\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"submit\", \"id\", \"schedule-button\"]],\n    template: function BookingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\", 1);\n        i0.ɵɵtext(2, \"Book Apointment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function BookingComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.scheduleMeeting();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Meeting Time \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Email \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵtext(14, \"Schedule Appointment\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.appointmentForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".card[_ngcontent-%COMP%] {\\n  display: grid;\\n  place-items: center;\\n  background-color: #67bad5;\\n  padding: 1em;\\n}\\n#schedule-button[_ngcontent-%COMP%] {\\n  border: none;\\n  background-color: #c8ffc8;\\n  height: 2rem;\\n  width: 10rem;\\n  margin-left: 10rem;\\n}\\n#title[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 2em;\\n  margin-bottom: 1rem;\\n  color: #fff;\\n  margin-left: 4rem;\\n}\\nlabel[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  width: 150px; \\n  text-align: right;\\n  margin-right: 10px;\\n}\\ninput[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"datetime-local\\\"][_ngcontent-%COMP%] {\\n  border: none;\\n  border-bottom: 2px solid #333;\\n  background-color: transparent; \\n  padding: 5px;\\n  width: 200px; \\n  outline: none; \\n}\\ninput[type=\\\"email\\\"][_ngcontent-%COMP%]:focus, input[type=\\\"datetime-local\\\"][_ngcontent-%COMP%]:focus {\\n  border-bottom: 2px solid #007bff; \\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYm9va2luZy9ib29raW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7RUFDWix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjtBQUNBOztFQUVFLFlBQVk7RUFDWiw2QkFBNkI7RUFDN0IsNkJBQTZCO0VBQzdCLFlBQVk7RUFDWixZQUFZO0VBQ1osYUFBYTtBQUNmO0FBQ0E7O0VBRUUsZ0NBQWdDLEVBQUUsMEJBQTBCO0FBQzlEIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjdiYWQ1O1xyXG4gIHBhZGRpbmc6IDFlbTtcclxufVxyXG4jc2NoZWR1bGUtYnV0dG9uIHtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M4ZmZjODtcclxuICBoZWlnaHQ6IDJyZW07XHJcbiAgd2lkdGg6IDEwcmVtO1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHJlbTtcclxufVxyXG4jdGl0bGUge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIG1hcmdpbi1sZWZ0OiA0cmVtO1xyXG59XHJcbmxhYmVsIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgd2lkdGg6IDE1MHB4OyBcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxyXG5pbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0ge1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzMzMztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgXHJcbiAgcGFkZGluZzogNXB4O1xyXG4gIHdpZHRoOiAyMDBweDsgXHJcbiAgb3V0bGluZTogbm9uZTsgXHJcbn1cclxuaW5wdXRbdHlwZT1cImVtYWlsXCJdOmZvY3VzLFxyXG5pbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl06Zm9jdXMge1xyXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMDA3YmZmOyAvKiBDaGFuZ2UgY29sb3Igb24gZm9jdXMgKi9cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","BookingComponent","constructor","fb","ngOnInit","appointmentForm","group","appointmentTime","required","email","scheduleMeeting","Date","value","startTime","toISOString","slice","endTime","getEndTime","eventDetails","console","info","createGoogleEvent","setHours","getHours","generateICSFile","datetimeValue","date","formattedStartDate","replace","formattedEndDate","eventName","eventDescription","location","icsContent","blob","Blob","type","downloadLink","document","createElement","href","URL","createObjectURL","download","click","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","BookingComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","BookingComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Enilson\\Dev\\Studio2024\\Scheduling\\google-calender-app\\src\\app\\booking\\booking.component.ts","C:\\Enilson\\Dev\\Studio2024\\Scheduling\\google-calender-app\\src\\app\\booking\\booking.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\ndeclare var createGoogleEvent: any;\r\n\r\n@Component({\r\n  selector: 'app-booking',\r\n  templateUrl: './booking.component.html',\r\n  styleUrls: ['./booking.component.css'],\r\n})\r\nexport class BookingComponent implements OnInit {\r\n  constructor(private fb: FormBuilder) {}\r\n  appointmentForm!: FormGroup;\r\n\r\n  ngOnInit() {\r\n    this.appointmentForm = this.fb.group({\r\n      appointmentTime: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  // Function to handle the button click event to schedule a meeting.\r\n  scheduleMeeting() {\r\n    let appointmentTime = new Date(this.appointmentForm.value.appointmentTime);\r\n    // Convert the date to the desired format with a custom offset (e.g., -07:00)\r\n    const startTime = appointmentTime.toISOString().slice(0, 18) + '-07:00';\r\n    const endTime = this.getEndTime(appointmentTime);\r\n    const eventDetails = {\r\n      email: this.appointmentForm.value.email,\r\n      startTime: startTime,\r\n      endTime: endTime,\r\n    };\r\n    console.info(eventDetails);\r\n    //this.generateICSFile()\r\n    createGoogleEvent(eventDetails);\r\n  }\r\n\r\n  getEndTime(appointmentTime: Date) {\r\n    // Add one hour to the date\r\n    appointmentTime.setHours(appointmentTime.getHours() + 1);\r\n    const endTime = appointmentTime.toISOString().slice(0, 18) + '-07:00';\r\n    return endTime;\r\n  }\r\n\r\n  generateICSFile() {\r\n    const datetimeValue = this.appointmentForm.value.appointmentTime;\r\n    const date = new Date(datetimeValue);\r\n    const endTime = new Date(date);\r\n    endTime.setHours(endTime.getHours() + 1);\r\n    // Format dates to be in the proper format for the .ics file\r\n    const formattedStartDate = date\r\n      .toISOString()\r\n      .replace(/-/g, '')\r\n      .replace(/:/g, '')\r\n      .slice(0, -5);\r\n    const formattedEndDate = endTime\r\n      .toISOString()\r\n      .replace(/-/g, '')\r\n      .replace(/:/g, '')\r\n      .slice(0, -5);\r\n    // Event details\r\n    const eventName = 'Sample Event';\r\n    const eventDescription = 'This is a sample event';\r\n    const location = 'Sample Location';\r\n    // Create the .ics content\r\n    const icsContent = `BEGIN:VCALENDAR\r\n  VERSION:2.0\r\n  BEGIN:VEVENT\r\n  DTSTAMP:${formattedStartDate}Z\r\n  DTSTART:${formattedStartDate}Z\r\n  DTEND:${formattedEndDate}Z\r\n  SUMMARY:${eventName}\r\n  DESCRIPTION:${eventDescription}\r\n  LOCATION:${location}\r\n  END:VEVENT\r\n  END:VCALENDAR`;\r\n    // Create a Blob containing the .ics content\r\n    const blob = new Blob([icsContent], {\r\n      type: 'text/calendar;charset=utf-8',\r\n    });\r\n    // Create a download link for the Blob\r\n    const downloadLink = document.createElement('a');\r\n    downloadLink.href = URL.createObjectURL(blob);\r\n    downloadLink.download = 'event.ics';\r\n    // Trigger the download\r\n    downloadLink.click();\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <p id=\"title\">Book Apointment</p>\r\n  <form [formGroup]=\"appointmentForm\" (ngSubmit)=\"scheduleMeeting()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"appointmentTime\">Meeting Time </label>\r\n      <input\r\n        type=\"datetime-local\"\r\n        id=\"appointmentTime\"\r\n        formControlName=\"appointmentTime\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email </label>\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        class=\"form-control\"\r\n        formControlName=\"email\"\r\n      />\r\n    </div>\r\n    <br/>\r\n    <button type=\"submit\" id=\"schedule-button\">Schedule Appointment</button>\r\n  </form>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}